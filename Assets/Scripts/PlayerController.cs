using System;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

public class PlayerController : MonoBehaviour
{

    public float acceleration = 0;
    public AudioSource wind;
    public AudioSource music;
    public float responsiveness = 1;
    public float friction = 0.5f;
    public float airAccelerationModifier = 0.2f;
    public LayerMask deathLayers;
    private Transform player;
    public Rigidbody wheel;
    public LayerMask groundLayers;

    private SphereCollider sc;


    void Start()
    {
        player = GetComponent<Transform>();
        sc = transform.parent.GetChild(0).GetComponent<SphereCollider>();
    }

    void FixedUpdate() {
        //Check for death
        if (Physics.CheckSphere(player.transform.position, sc.radius + 0.1f, deathLayers)) {
            GameObject.Find("GameController").GetComponent<GameController>().Die();
        }

        calculateForce();
        updatePosition();

        wind.volume = Mathf.Clamp(Mathf.Pow(wheel.velocity.magnitude / 35, 2) / 2, 0, 0.25f);

        if (!music.isPlaying) {
            music.PlayDelayed(UnityEngine.Random.Range(10, 30));
        }
    }

    void calculateForce() {
        Vector3 currentVelocity = wheel.velocity;

        // Calculates the force generated by the player pressing WASD

        Vector3 playerInputForce = Vector3.ProjectOnPlane(player.forward * Input.GetAxisRaw("Forward") + player.right * Input.GetAxisRaw("Sideways"), Vector3.up).normalized * acceleration;

        // Okay so let me explain
        // Yes friction and stopping force are different. Stopping force slows you down when you stop pressing buttons
        // where friction reduces your max speed by slowing you down WHILE you drive.
        // Could they be condensed to the same variable? Dunno! ¯\_(ツ)_/¯
        Vector3 stoppingForce = Vector3.zero;
        Vector3 frictionForce = Vector3.zero;
        if (getGrounded()) {
            //Debug.Log("I am grounded :O");
            // Calculates friction
            frictionForce = -currentVelocity * friction;
            stoppingForce = (-currentVelocity + Vector3.Project(currentVelocity, playerInputForce)) * responsiveness;
            // If nothing is being pressed, boost your angular drag to slow your spinning
            if (playerInputForce.magnitude < 0.1) {
                wheel.angularDrag = 0.7f;
            } else {
                wheel.angularDrag = 0.05f;
            }
        } else {
            playerInputForce *= airAccelerationModifier;
        }
        // Adds the force
        wheel.AddForce(Time.fixedDeltaTime * (playerInputForce + stoppingForce + frictionForce), ForceMode.Acceleration);
    }

    void updatePosition() {
        player.position = wheel.position;
    }

    public bool getGrounded() {
        return Physics.CheckBox(player.position + new Vector3(0, -0.5f, 0), new Vector3(0.075f, 0.075f, 0.075f), Quaternion.identity, groundLayers);
    }
}